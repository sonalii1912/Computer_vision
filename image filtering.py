# -*- coding: utf-8 -*-
"""scratch.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15kCjmidGcrKUDkquLCkk5TrelSWOeMcJ
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load a sample image
image = cv2.imread("C:\\Users\\ombha\\Downloads\\test_image.jpg")

# Convert the image to grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Apply Sobel filter for edge detection
sobel_x = cv2.Sobel(gray_image, cv2.CV_64F, 1, 0, ksize=3)
sobel_y = cv2.Sobel(gray_image, cv2.CV_64F, 0, 1, ksize=3)
sobel_magnitude = np.sqrt(sobel_x**2 + sobel_y**2)

# Apply Median filter for noise reduction
median_filtered = cv2.medianBlur(image, 5)

# Apply Gaussian filter for blurriness
gaussian_blurred = cv2.GaussianBlur(image, (5, 5), 0)

# Display the original and filtered images
plt.figure(figsize=(10, 10))
plt.subplot(2, 2, 1)
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.title('Original Image')

plt.subplot(2, 2, 2)
plt.imshow(sobel_magnitude, cmap='gray')
plt.title('Sobel Edge Detection')

plt.subplot(2, 2, 3)
plt.imshow(cv2.cvtColor(median_filtered, cv2.COLOR_BGR2RGB))
plt.title('Median Filter (Noise Reduction)')

plt.subplot(2, 2, 4)
plt.imshow(cv2.cvtColor(gaussian_blurred, cv2.COLOR_BGR2RGB))
plt.title('Gaussian Filter (Blurriness)')

plt.show()